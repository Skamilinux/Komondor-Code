#!/bin/sh
export LANG=C #w004
. /DISTRO_SPECS #v412 has DISTRO_VERSION, DISTRO_FILE_PREFIX

PATH="/bin:/sbin"
KERNELVER="`uname -r`"

if [ ! "$1" ];then
 mount -t proc none /proc
 mount -t sysfs none /sys
 mount -t rootfs -o remount,rw rootfs /
 ln -s /proc/mounts /etc/mtab #resize2fs,e2fsck need this.
fi

RDSH=""
if [ "$pfix" ];then
 for ONEFIX in `echo -n "$pfix" | tr ',' ' '`
 do
  case $ONEFIX in
   ram)     PRAMONLY="yes";;      #run in ram only (do not load ${DISTRO_FILE_PREFIX}save).
   rdsh)    RDSH="yes";;          #exit to shell in initial ramdisk.
   rdsh0)   RDSH="0";;            #drop out early, before loading drivers.
   rdsh6)   RDSH="6";;            #w091027 drop out just before mount layerfs.
   nox)     PNOX="yes";;          #do not start X.
   clean)   PCLEAN="yes";;        #force version upgrade and cleanup.
   purge)   PPURGE="yes";;        #radical cleanup for broken system.
   copy)    PCOPY="yes";;         #copy .sfs files into ram.
   nocopy)  PNOCOPY="yes";;        #do not copy .sfs files into ram (default is copy if enough ram).
   fsck)    PFSCK="yes";;         #do a fsck of ${DISTRO_FILE_PREFIX}save file.
   [0-9]*)  PIGNORELAST=$ONEFIX;; #blacklist last $ONEFIX folders (multisession).
  esac
 done
fi
clear

if[ "$RDSH" == "yes" ];then
 exec /bin/sh >/dev/console 2>&1

fi
echo "Meghajtók vizsgálása" > /dev/console
probepart_init > /tmp/devices
echo "" > /tmp/mount_dev
if [ "$pupsfs" ];then #ex: sda3:/subdir/puppy.sfs
 echo $(echo "$pupsfs" | cut -f1 -d':') > /tmp/mount_dev
 PUPSFS2=$(basename $(echo '$pupsfs' | cut -f2 -d':')) 
 if [ "$(dirname $(echo '$pupsfs' | cut -f2 -d':'))" != "/" ];then
  PSUBDIR2=$(dirname $(echo '$pupsfs' | cut -f2 -d':'))
 fi
elif [ "$pmedia" ];then
 PSUBDIR2=$(echo $psubdir) 
 if [ "$pmedia" == "cd" ];then
  CDDEV=$(cat /tmp/devices | grep -E '^sr|^iso9660')
  echo "$CDDEV" >> /tmp/mount_dev
 elif [ "$pmedia" == "usbflash" -o "$pmedia" == "flash" ];then
  for usb in $(cat /tmp/devices | grep sd );do
   ONEPART=$(echo "$usb" | cut -f1 -d'|' | cut -f3 -d'/' | sed s'/.$//')
   [ ! -z $(readlink $ONEPART | grep usb) ]&& echo "$usb" >> /tmp/mount_dev
  done
 fi
elif [ "$pdev1" ];then #ex: sda3
 cat /tmp/devices | grep $pdev1 > /tmp/mount_dev
else
  cp -rf /tmp/devices /tmp/mount_dev
fi

[ "$PUPSFS2" != "DISTRO_PUPPYSFS" ]&& echo -e "A $PUPSFS2 fájl neve nem egyezik az initrd-ben megadottal.\nA rendszerhez tartozó sfs fájl neve : $DISTRO_PUPPYSFS " > /dev/console
[ -z "$PUPSFS2" ]&& PUPSFS2=$(echo "$DISTRO_PUPPYSFS")

if [ "$PSUBDIR2" == "" ];then
 MAXDEPTH="-depth -maxdepth 1"
 FINDPATH="/mnt/data"
else
 MAXDEPTH=""
 FINDPATH=$(echo "/mnt/data$PSUBDIR2")
fi

if [ ! -z $(cat /tmp/mount_dev) ];then
 for i in $(cat /tmp/mount_dev);do
 DEV=$(echo "$i" | cut -f1 -d'|')
 if [ "$(echo "$i" | awk -F'|' '{print $2}')" != "none" ];then
  DEVFS=$(echo "$i" | awk -F'|' '{print $2}')
  mount -t $DEVFS $DEV /mnt/data
 else
  mount $DEV /mnt/data
 fi
 if [ ! -z $(cat /proc/mounts | grep $DEV) ];then
  MOUNT_SFS=$(find $FINDPATH $MAXDEPTH -type f -iname $PUPSFS2)
  if [ ! -z $(echo "$MOUNT_SFS") ];then
  
   #sfs csatolása
   
  fi
 else
  echo "Az $(echo $DEV | cut -f3 -d'/' ) meghajtó nem lett fel csatolva" > /dev/console
 fi
 done
else
echo -e "Nincs csatolható meghajtó a feltételek alapján. Válassz más boot paramétert." > /dev/console
fi

exec /bin/sh >/dev/console 2>&1
